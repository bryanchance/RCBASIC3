#ifndef __rcbasic_editrc_ideFrame__
#define __rcbasic_editrc_ideFrame__

/**
@file
Subclass of rc_ideFrame, which is generated by wxFormBuilder.
*/

#include "rcbasic_edit.h"
#include "rc_closeProjectSavePrompt_dialog.h"
#include "rc_newFile_dialog.h"
#include "projects.h"
#include <wx/imaglist.h>
#include <wx/stc/stc.h>
#include <vector>

//// end generated include

class rcbasic_edit_txtCtrl
{
    private:
        wxStyledTextCtrl* txtCtrl;
        wxFileName sourcePath;
    public:
        rcbasic_edit_txtCtrl(wxFileName src_path, wxAuiNotebook* parent_nb);
        ~rcbasic_edit_txtCtrl();
        wxStyledTextCtrl* getTextCtrl();
        wxFileName getSourcePath();
};

/** Implementing rc_ideFrame */
class rcbasic_edit_frame : public rc_ideFrame
{
    private:
        bool toolbarVisible;
        bool sideBarVisible;
        bool messageWindowVisible;
        std::vector<rcbasic_project*> open_projects;
        std::vector<rcbasic_edit_txtCtrl*> open_files;
        rcbasic_project* context_project; //for context menu
        rcbasic_project* active_project; //for everything else
        rcbasic_project* closing_project;
        wxImageList* project_tree_imageList;
        int project_tree_rootImage;
        int project_tree_folderImage;
        int project_tree_fileImage;
	protected:
		// Handlers for rc_ideFrame events.
		void createNewProject( wxCommandEvent& event );
		void toggleToolbar( wxCommandEvent& event );
		void toggleSideBar( wxCommandEvent& event );
		void toggleMessageWindow( wxCommandEvent& event );
		void onProjectTreeContextMenu( wxTreeEvent& event );
		void onTreeContextClick( wxCommandEvent &evt );
		void onProjectTreeNodeActivated( wxTreeEvent& event );
		void onSaveProject( wxCommandEvent& event );
		void onSaveProjectAs( wxCommandEvent& event );
		void onSourceFileTabClose( wxAuiNotebookEvent& event );
	public:
		/** Constructor */
		rcbasic_edit_frame( wxWindow* parent );
		int getProjectFromRoot(wxTreeItemId node);
		void updateProjectTree(int project_index);
		void addFileToProject(wxFileName sourceFile);
		void addMultipleFilesToProject();
		void projectTreeContextMenu();
		wxFileName openFileDialog(wxString title, wxString default_wildcard, int flag);
		wxArrayString openMultiFileDialog(wxString title, wxString default_wildcard, int flag);
		void saveProject(rcbasic_project* project);
		void closeProject(rcbasic_project* project);
		rcbasic_edit_txtCtrl* openFileTab(rcbasic_project* project, wxFileName newFile);
		void createNewFile(rcbasic_project* project, wxFileName newFile);
	//// end generated class members


};

#endif // __rcbasic_editrc_ideFrame__
